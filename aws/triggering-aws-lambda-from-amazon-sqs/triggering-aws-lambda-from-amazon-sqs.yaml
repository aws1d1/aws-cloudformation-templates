AWSTemplateFormatVersion : 2010-09-09
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: allowCloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: arn:aws:logs:*:*:*
        - PolicyName: allowSqs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ChangeMessageVisibility
              Resource: !GetAtt TestQueue.Arn
        - PolicyName: allowDynamodb
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              Resource: arn:aws:dynamodb:*:*:table/Message-1

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Join
          - '-'
          - - 'lambda'
            - 'sqs'
            - !Ref AWS::Region
            - !Ref AWS::AccountId
        S3Key: lambda/lambda_function.zip
      FunctionName: !Join
          - '-'
          - - 'lambda'
            - !Ref AWS::Region
            - !Ref AWS::AccountId
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Timeout: 60
      MemorySize: 512

  LambdaFunctionEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt TestQueue.Arn
      FunctionName: !GetAtt LambdaFunction.Arn

  TestQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Join
          - '-'
          - - 'sqs'
            - !Ref AWS::Region
            - !Ref AWS::AccountId
      DelaySeconds: 0
      VisibilityTimeout: 120

  TestDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "MessageId"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "MessageId"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"
      TableName: "Message-1"